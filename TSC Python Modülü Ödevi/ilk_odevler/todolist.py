# -*- coding: utf-8 -*-
"""todolist

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xMQu1LeeyQdvWttuzKxiCgl_VGkKpo-u
"""

"""
Gorev Sınıfı
Her bir görevi temsil eder.
tamamlandi_olarak_isaretle(): Görevi tamamlandı olarak işaretler.
__str__(): Görevi okunabilir bir formatta döndürür.

YapilacaklarUygulamasi Sınıfı
Görevlerin yönetimi ve dosya işlemlerini gerçekleştirir.
gorev_ekle(): Kullanıcıdan görev adı alır ve listeye ekler.
gorev_tamamla(): Kullanıcıdan bir görev ID'si alır ve o görevi tamamlanmış olarak işaretler.
gorev_sil(): Kullanıcıdan bir görev ID'si alır ve o görevi listeden siler.
gorevleri_goster(): Kayıtlı tüm görevleri listeler.
gorevleri_kaydet(): Görevleri bir dosyaya kaydeder.
gorevleri_yukle(): Dosyadan görevleri yükler."""

class Gorev:
    def __init__(self, gorev_adi):
        self.ad = gorev_adi
        self.durum = "Bekliyor"

    def tamamlandi_olarak_isaretle(self):
        self.durum = "Tamamlandı"

    def __str__(self):
        return f"{self.ad} - {self.durum}"


class YapilacaklarUygulamasi:
    def __init__(self):
        self.gorevler = {}
        self.dosya_adi = "gorevler_verisi.txt"
        self.gorevleri_yukle()

    def gorev_ekle(self):
        gorev_adi = input("Görev adı girin: ")
        gorev_id = len(self.gorevler) + 1
        gorev = Gorev(gorev_adi)
        self.gorevler[gorev_id] = gorev
        self.gorevleri_kaydet()
        print(f"Görev eklendi: '{gorev_adi}'")

    def gorev_tamamla(self):
        self.gorevleri_goster()
        try:
            gorev_id = int(input("Tamamlanacak görevin ID'sini girin: "))
            if gorev_id in self.gorevler:
                self.gorevler[gorev_id].tamamlandi_olarak_isaretle()
                self.gorevleri_kaydet()
                print(f"Görev {gorev_id} tamamlandı olarak işaretlendi.")
            else:
                print("Geçersiz görev ID'si.")
        except ValueError:
            print("Lütfen geçerli bir görev ID'si girin.")

    def gorev_sil(self):
        self.gorevleri_goster()
        try:
            gorev_id = int(input("Silinecek görevin ID'sini girin: "))
            if gorev_id in self.gorevler:
                silinen_gorev = self.gorevler.pop(gorev_id)
                self.gorevleri_kaydet()
                print(f"Görev '{silinen_gorev.ad}' silindi.")
            else:
                print("Geçersiz görev ID'si.")
        except ValueError:
            print("Lütfen geçerli bir görev ID'si girin.")

    def gorevleri_goster(self):
        if not self.gorevler:
            print("Görev bulunamadı.")
            return
        print("\nGörev Listesi:")
        for gorev_id, gorev in self.gorevler.items():
            print(f"ID: {gorev_id} - {gorev}")

    def gorevleri_kaydet(self):
        with open(self.dosya_adi, "w") as dosya:
            for gorev_id, gorev in self.gorevler.items():
                dosya.write(f"{gorev_id}|{gorev.ad}|{gorev.durum}\n")

    def gorevleri_yukle(self):
        try:
            with open(self.dosya_adi, "r") as dosya:
                for satir in dosya:
                    gorev_id, ad, durum = satir.strip().split("|")
                    gorev = Gorev(ad)
                    gorev.durum = durum
                    self.gorevler[int(gorev_id)] = gorev
        except FileNotFoundError:
            pass


def ana_menu():
    uygulama = YapilacaklarUygulamasi()

    while True:
        print("\nMenü:")
        print("1. Görev Ekle")
        print("2. Görev Tamamla")
        print("3. Görev Sil")
        print("4. Görevleri Göster")
        print("5. Çıkış")
        secim = input("Bir seçenek seçin: ")

        if secim == "1":
            uygulama.gorev_ekle()
        elif secim == "2":
            uygulama.gorev_tamamla()
        elif secim == "3":
            uygulama.gorev_sil()
        elif secim == "4":
            uygulama.gorevleri_goster()
        elif secim == "5":
            uygulama.gorevleri_kaydet()
            print("Görevler kaydedildi. Çıkılıyor...")
            break
        else:
            print("Geçersiz seçenek, lütfen tekrar deneyin.")


if __name__ == "__main__":
    ana_menu()